28 - 01 - 2025

SQL - Structure Query language
Database - Collection of Data

Relational and Non-Relational Database (NoSQL)

DDL (data Definition Language) : create, alter, rename, truncate and drop.
DQL (Data Query Language) : select
DML (Data Manipulation Language) : insert, update and delete
DCL (Data Control Language) : grant and revoke permission to users
TCL (Transaction Control Language) : start transaction, commit, rollback

create Database : create database database_name;
use database_name;

create table :

create table table_name(
    col_name datatype,
    ....
);

Insert : insert into table_name values (value1,value2)

select * from table_name;

Key : 

Primary Key - Uniquely identifies each row. - Unique and Not null
Foreign Key - refers to the primary key in another table.

Two columns combination is also exist in primary key.
- but both columns values are different.

DEFAULT - use for if we not found any value than automatically set that default value.
Check - We can set limit on value.
constraints : 

Where : It is use for conditions in Query.

Distinct : Use for get all Distinct vakue form the columns.

Operators : 

- Arithmatic Operators : + addition, - subtraction, * multiplication, / division, % modulus
- Comparision Operators : = equal to, != not equal to, >, >=, <, <=
- Logical Operators : AND, OR, IN, BETWEEN, ALL, LIKE, ANY
- Bitwise Operators : & (Bitwise AND), | (Bitwise OR)


LIMIT Clause
Order By Clause

Ascending and Descending


Aggregate Functions : 

COUNT()
MAX()
MIN()
SUM()
AVG()

Group By Clause :

Group rows that have the same values into summary rows.

Having Clause : 

Use for apply condition on Groups

General Order : 

SELECT column(s)
FROM table_name
WHERE condition
GROUP BY column(s)
HAVING condition
ORDER BY column(s) ASC;

29-01-2025

Table Related queries : 

- Update

Update student
set grade="O"
where grade="A";

error safe update mode

set sql_safe_updates=0;

all marks update : 
update student 
set marks = marks + 1;

Delete : to delete existing rows

delete from student
where marks<30;

delete from student;  - delete all the data from table

- Foreign Key : 

foreign key (dept_id) references dept(id)

Cascading for Foreign Key : 

On Update Cascade : 
On Delete Cascade :


- Alter - to change th schema

Add Column : 

- alter table table_name
add column column_name

Drop Column : 

- alter table table_name
drop column column_name

Rename Table :
- alter table table_name
rename to new_table_name

change column(rename) :

alter table table_name
change column old_name new_name new_datatype new_constraints;

modify column (modify datatype/constraints)

alter table table_name
modify col_name new_datatype new_constraints;

Truncate : to delete table's data.

truncate table table_name;


-------------------------------------------------------------------------------

Joins in SQL :
Joins is used to combine rows from two or more tables, based on a related column between them.

Types of Joins : 

- Inner Join : Returns records that have matching values in both tables

Outer Joins : 

- Left Join
- Right Join
- Full Join


Inner Join Query : 

select column(s)
from tableA
inner join tableB
on tableA.col_name = table.col_name;

Left Join : 
- Returns all the records from the left table, and the matched records from the right table.

select column(s)
from tableA
left join tableB
on tableA.col_name=tableB.col_name;

Right Join : 
- Returns all the records from the right table, and the matched records from the left table.

select column(s)
from tableA
right join tableB
on tableA.col_name=tableB.col_name;

overlap the data.

Full Join : 

Returns all records when there is a match in either left or right table


select column(s)
from tableA
left join tableB
on tableA.col_name=tableB.col_name
union
select column(s)
from tableA
right join tableB
on tableA.col_name=tableB.col_name;

left join
union
right join

union gives unique values

Left Exclusive Join : Only gives left table's data and also not include common data from right table

select column(s)
from tableA
left join tableB
on tableA.col_name=tableB.col_name
where tableB.col_name is null;



Right Exclusive Join : Only gives right table's data and also not include common data from left table

select column(s)
from tableA
right join tableB
on tableA.col_name=tableB.col_name
where tableA.col_name is null;


self join : It is a regular join but the table is joined with itself.

select column(s)
from table as a
join table as b
on a.col_name=b.col_name;

Union : It is used to combine the result-set of two or more SELECT statements.
Give UNIQUE records.

To use it  :
- every SELECT should have same no. of columns
- columns must have similar data types
- columns in every SELECT should be in same Order

select column(s) from tableA
union
select column(s) from tableB;

Union All : it give duplicates also

select column(s) from tableA
union all
select column(s) from tableB;

SQL Sub Queries : 

A Subquery or inner query or a Nested auery is a query within another SQL query.
It involves 2 select statements.

select column(s)
from table_name
where col_name operator
(subquery);

select max(marks) from (select * from student where city= "Delhi") ad temp;

select (select max(marks) from student),name
from student;

MySQL Views : 

A view is a virtual table based on the result-set of an SQL statement.

create view view1 as
select rollno, name, marks from student;

select * view from view1
where marks>90;

drop the view
drop view view1;


Topics :


Section 8. Common Table Expressions

    PostgreSQL CTE – introduce you to PostgreSQL common table expressions or CTEs.
    Recursive query using CTEs – discuss the recursive query and learn how to apply it in various contexts.

Section 6. Grouping sets, Cubes, and Rollups

    Grouping Sets  – generate multiple grouping sets in reporting.
    Cube – define multiple grouping sets that include all possible combinations of dimensions.
    Rollup – generate reports that contain totals and subtotals.

Section 9. Modifying Data

In this section, you will learn how to insert data into a table with the INSERT statement, modify existing data with the UPDATE statement, and remove data with the DELETE statement. Additionally, you will learn how to use the UPSERT statement to merge data.

    Insert – guide you on how to insert a single row into a table.
    Insert multiple rows – show you how to insert multiple rows into a table.
    Update – update existing data in a table.
    Update join – update values in a table based on values in another table.
    Delete – delete data in a table.
    Upsert – insert or update data if the new row already exists in the table.
